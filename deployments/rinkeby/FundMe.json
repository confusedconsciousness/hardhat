{
  "address": "0x5feB7A283D126e0954dfB0fCCe27a27d45b7DDFb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf1847dc7feafdd7979e8915b98d5c7046c73dc214b4dd41d1d15f90411dd619",
  "receipt": {
    "to": null,
    "from": "0xE933E09C1D3CE4C69dbF789AC67951723D527E5B",
    "contractAddress": "0x5feB7A283D126e0954dfB0fCCe27a27d45b7DDFb",
    "transactionIndex": 4,
    "gasUsed": "863117",
    "logsBloom": "0x
    "blockHash": "0x5b9fc66a1987018f4f282f3bafa645ab3b8ab90c209a82f20b479053bd916764",
    "transactionHash": "0xcf1847dc7feafdd7979e8915b98d5c7046c73dc214b4dd41d1d15f90411dd619",
    "logs": [],
    "blockNumber": 10884184,
    "cumulativeGasUsed": "1298170",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "7473fbe75ed4362999ec7c2a39b9cbb3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nerror notOwner();\\n\\nimport \\\"./lib/PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract FundMe {\\n    //   we'll use library for price conversion\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n    address[] s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // modifier\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert notOwner();\\n        _;\\n    }\\n\\n    // constructor\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to send more eth\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (uint256 index = 0; index < s_funders.length; index++) {\\n            address funder = s_funders[index];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    // getters\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x28d65e8d40a6c7198bc7d4ddf0a577b65eeb4cb3c1c4536d431802c2f7605f7d\",\"license\":\"MIT\"},\"contracts/lib/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    /**\\n    This function gets us the price of ETH/USD from chainlink oracle,\\n    to execute this function we must provide some LINK token\\n     */\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // this function should take an address no?\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPriceInUSD = getPrice(priceFeed);\\n\\n        uint256 ethAmountInUSD = (ethPriceInUSD * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x107cddd5c98c53cfe25edc1938df7305a437a544c16d24f42b3dcda7f42ad242\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610fa6380380610fa683398181016040528101906100329190610113565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e3a61016c6000396000818161021b015281816103ae01526104540152610e3a6000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100d55780639e87a5cd14610100578063b60d42881461012b578063d7b4750c1461013557610070565b80630d8e6e2c146100755780633ccfd60b146100a05780636b69a592146100aa575b600080fd5b34801561008157600080fd5b5061008a610172565b60405161009791906107c0565b60405180910390f35b6100a8610219565b005b3480156100b657600080fd5b506100bf610443565b6040516100cc91906107c0565b60405180910390f35b3480156100e157600080fd5b506100ea610450565b6040516100f7919061081c565b60405180910390f35b34801561010c57600080fd5b50610115610478565b6040516101229190610896565b60405180910390f35b6101336104a2565b005b34801561014157600080fd5b5061015c600480360381019061015791906108e2565b6105dd565b604051610169919061081c565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101dc57600080fd5b505afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102149190610924565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029e576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103495760008082815481106102c3576102c2610951565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610341906109af565b9150506102a1565b50600067ffffffffffffffff811115610365576103646109f8565b5b6040519080825280602002602001820160405280156103935781602001602082028036833780820191505090505b50600090805190602001906103a9929190610700565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103f090610a58565b60006040518083038185875af1925050503d806000811461042d576040519150601f19603f3d011682016040523d82523d6000602084013e610432565b606091505b505090508061044057600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104e1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461062490919063ffffffff16565b1015610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610aca565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105719190610aea565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008082815481106105f2576105f1610951565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061063083610660565b90506000670de0b6b3a764000085836106499190610b40565b6106539190610bc9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190610c72565b5050509150506402540be400816106f89190610ced565b915050919050565b828054828255906000526020600020908101928215610779579160200282015b828111156107785782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610720565b5b509050610786919061078a565b5090565b5b808211156107a357600081600090555060010161078b565b5090565b6000819050919050565b6107ba816107a7565b82525050565b60006020820190506107d560008301846107b1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610806826107db565b9050919050565b610816816107fb565b82525050565b6000602082019050610831600083018461080d565b92915050565b6000819050919050565b600061085c610857610852846107db565b610837565b6107db565b9050919050565b600061086e82610841565b9050919050565b600061088082610863565b9050919050565b61089081610875565b82525050565b60006020820190506108ab6000830184610887565b92915050565b600080fd5b6108bf816107a7565b81146108ca57600080fd5b50565b6000813590506108dc816108b6565b92915050565b6000602082840312156108f8576108f76108b1565b5b6000610906848285016108cd565b91505092915050565b60008151905061091e816108b6565b92915050565b60006020828403121561093a576109396108b1565b5b60006109488482850161090f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109ed576109ec610980565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a42600083610a27565b9150610a4d82610a32565b600082019050919050565b6000610a6382610a35565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652065746800000000000000600082015250565b6000610ab4601983610a6d565b9150610abf82610a7e565b602082019050919050565b60006020820190508181036000830152610ae381610aa7565b9050919050565b6000610af5826107a7565b9150610b00836107a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b3557610b34610980565b5b828201905092915050565b6000610b4b826107a7565b9150610b56836107a7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b8f57610b8e610980565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bd4826107a7565b9150610bdf836107a7565b925082610bef57610bee610b9a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c1981610bfa565b8114610c2457600080fd5b50565b600081519050610c3681610c10565b92915050565b6000819050919050565b610c4f81610c3c565b8114610c5a57600080fd5b50565b600081519050610c6c81610c46565b92915050565b600080600080600060a08688031215610c8e57610c8d6108b1565b5b6000610c9c88828901610c27565b9550506020610cad88828901610c5d565b9450506040610cbe8882890161090f565b9350506060610ccf8882890161090f565b9250506080610ce088828901610c27565b9150509295509295909350565b6000610cf882610c3c565b9150610d0383610c3c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4257610d41610980565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7f57610d7e610980565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dbc57610dbb610980565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610df957610df8610980565b5b82820290509291505056fea2646970667358221220ddad0b6e8005b670068e439ba65f9f34ac4e277b91bc1be5db4a9f420f0fc2f364736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100d55780639e87a5cd14610100578063b60d42881461012b578063d7b4750c1461013557610070565b80630d8e6e2c146100755780633ccfd60b146100a05780636b69a592146100aa575b600080fd5b34801561008157600080fd5b5061008a610172565b60405161009791906107c0565b60405180910390f35b6100a8610219565b005b3480156100b657600080fd5b506100bf610443565b6040516100cc91906107c0565b60405180910390f35b3480156100e157600080fd5b506100ea610450565b6040516100f7919061081c565b60405180910390f35b34801561010c57600080fd5b50610115610478565b6040516101229190610896565b60405180910390f35b6101336104a2565b005b34801561014157600080fd5b5061015c600480360381019061015791906108e2565b6105dd565b604051610169919061081c565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101dc57600080fd5b505afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102149190610924565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029e576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103495760008082815481106102c3576102c2610951565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610341906109af565b9150506102a1565b50600067ffffffffffffffff811115610365576103646109f8565b5b6040519080825280602002602001820160405280156103935781602001602082028036833780820191505090505b50600090805190602001906103a9929190610700565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516103f090610a58565b60006040518083038185875af1925050503d806000811461042d576040519150601f19603f3d011682016040523d82523d6000602084013e610432565b606091505b505090508061044057600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104e1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461062490919063ffffffff16565b1015610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610aca565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105719190610aea565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008082815481106105f2576105f1610951565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061063083610660565b90506000670de0b6b3a764000085836106499190610b40565b6106539190610bc9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190610c72565b5050509150506402540be400816106f89190610ced565b915050919050565b828054828255906000526020600020908101928215610779579160200282015b828111156107785782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610720565b5b509050610786919061078a565b5090565b5b808211156107a357600081600090555060010161078b565b5090565b6000819050919050565b6107ba816107a7565b82525050565b60006020820190506107d560008301846107b1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610806826107db565b9050919050565b610816816107fb565b82525050565b6000602082019050610831600083018461080d565b92915050565b6000819050919050565b600061085c610857610852846107db565b610837565b6107db565b9050919050565b600061086e82610841565b9050919050565b600061088082610863565b9050919050565b61089081610875565b82525050565b60006020820190506108ab6000830184610887565b92915050565b600080fd5b6108bf816107a7565b81146108ca57600080fd5b50565b6000813590506108dc816108b6565b92915050565b6000602082840312156108f8576108f76108b1565b5b6000610906848285016108cd565b91505092915050565b60008151905061091e816108b6565b92915050565b60006020828403121561093a576109396108b1565b5b60006109488482850161090f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109ed576109ec610980565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a42600083610a27565b9150610a4d82610a32565b600082019050919050565b6000610a6382610a35565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652065746800000000000000600082015250565b6000610ab4601983610a6d565b9150610abf82610a7e565b602082019050919050565b60006020820190508181036000830152610ae381610aa7565b9050919050565b6000610af5826107a7565b9150610b00836107a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b3557610b34610980565b5b828201905092915050565b6000610b4b826107a7565b9150610b56836107a7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b8f57610b8e610980565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bd4826107a7565b9150610bdf836107a7565b925082610bef57610bee610b9a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c1981610bfa565b8114610c2457600080fd5b50565b600081519050610c3681610c10565b92915050565b6000819050919050565b610c4f81610c3c565b8114610c5a57600080fd5b50565b600081519050610c6c81610c46565b92915050565b600080600080600060a08688031215610c8e57610c8d6108b1565b5b6000610c9c88828901610c27565b9550506020610cad88828901610c5d565b9450506040610cbe8882890161090f565b9350506060610ccf8882890161090f565b9250506080610ce088828901610c27565b9150509295509295909350565b6000610cf882610c3c565b9150610d0383610c3c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d4257610d41610980565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7f57610d7e610980565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dbc57610dbb610980565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610df957610df8610980565b5b82820290509291505056fea2646970667358221220ddad0b6e8005b670068e439ba65f9f34ac4e277b91bc1be5db4a9f420f0fc2f364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}