{
  "address": "0x55c364222C630bE3C8E133b013660ABbD861d912",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8157c17350d276c26113de6bb7455ceb62fc200242cc9a13374ac450d61f0238",
  "receipt": {
    "to": null,
    "from": "0xE933E09C1D3CE4C69dbF789AC67951723D527E5B",
    "contractAddress": "0x55c364222C630bE3C8E133b013660ABbD861d912",
    "transactionIndex": 11,
    "gasUsed": "1063375",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xeed3c6d066447f918ecbc50c98b7150cdc2e077dcd66feac980e23d75a1996e9",
    "transactionHash": "0x8157c17350d276c26113de6bb7455ceb62fc200242cc9a13374ac450d61f0238",
    "logs": [],
    "blockNumber": 10912604,
    "cumulativeGasUsed": "4699878",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "186a335247ede66367794ccabb8f1f48",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nerror FundMe__NotOwner();\\n\\nimport \\\"./lib/PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract FundMe {\\n    //   we'll use library for price conversion\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n    address[] s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // modifier\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // constructor\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to send more eth\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (uint256 index = 0; index < s_funders.length; index++) {\\n            address funder = s_funders[index];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        // reading and writing to storage takes a ton of gas\\n        // so we will read it once and bring it in memory, reading from memory is cheaper\\n        address[] memory funders = s_funders; // s signifies storage\\n        for (uint256 index = 0; index < funders.length; ++index) {\\n            address funder = funders[index]; // reading from memory\\n            // mapping can't be brought to memory for the time being\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    // getters\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getAddressToAmountFunded(address _address)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[_address];\\n    }\\n}\\n\",\"keccak256\":\"0x2ca62ec0b4ce38b458626024661c3e0ae51f129b9bde33af1d9a99dc4e9f0e1c\",\"license\":\"MIT\"},\"contracts/lib/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    /**\\n    This function gets us the price of ETH/USD from chainlink oracle,\\n    to execute this function we must provide some LINK token\\n     */\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // this function should take an address no?\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPriceInUSD = getPrice(priceFeed);\\n\\n        uint256 ethAmountInUSD = (ethPriceInUSD * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x107cddd5c98c53cfe25edc1938df7305a437a544c16d24f42b3dcda7f42ad242\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200136a3803806200136a833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111dd6200018d60003960008181610414015281816105a70152818161064d0152818161069d015261089101526111dd6000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063be2693f0146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b54565b610322565b6040516100d79190610b9a565b60405180910390f35b3480156100ec57600080fd5b506100f561036b565b6040516101029190610b9a565b60405180910390f35b610113610412565b005b34801561012157600080fd5b5061012a61063c565b6040516101379190610b9a565b60405180910390f35b34801561014c57600080fd5b50610155610649565b6040516101629190610bc4565b60405180910390f35b34801561017757600080fd5b50610180610671565b60405161018d9190610c3e565b60405180910390f35b61019e6101e7565b005b6101a861069b565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610c85565b610927565b6040516101de9190610bc4565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096e90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d0f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b69190610d5e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d557600080fd5b505afa1580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610dc9565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610497576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105425760008082815481106104bc576104bb610df6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053a90610e25565b91505061049a565b50600067ffffffffffffffff81111561055e5761055d610e6e565b5b60405190808252806020026020018201604052801561058c5781602001602082028036833780820191505090505b50600090805190602001906105a2929190610a4a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105e990610ece565b60006040518083038185875af1925050503d8060008114610626576040519150601f19603f3d011682016040523d82523d6000602084013e61062b565b606091505b505090508061063957600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610720576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610759575b5050505050905060005b815181101561082c5760008282815181106107cb576107ca610df6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061082590610e25565b90506107ad565b50600067ffffffffffffffff81111561084857610847610e6e565b5b6040519080825280602002602001820160405280156108765781602001602082028036833780820191505090505b506000908051906020019061088c929190610a4a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d390610ece565b60006040518083038185875af1925050503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b505090508061092357600080fd5b5050565b600080828154811061093c5761093b610df6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061097a836109aa565b90506000670de0b6b3a764000085836109939190610ee3565b61099d9190610f6c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611015565b5050509150506402540be40081610a429190611090565b915050919050565b828054828255906000526020600020908101928215610ac3579160200282015b82811115610ac25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6a565b5b509050610ad09190610ad4565b5090565b5b80821115610aed576000816000905550600101610ad5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2182610af6565b9050919050565b610b3181610b16565b8114610b3c57600080fd5b50565b600081359050610b4e81610b28565b92915050565b600060208284031215610b6a57610b69610af1565b5b6000610b7884828501610b3f565b91505092915050565b6000819050919050565b610b9481610b81565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b610bbe81610b16565b82525050565b6000602082019050610bd96000830184610bb5565b92915050565b6000819050919050565b6000610c04610bff610bfa84610af6565b610bdf565b610af6565b9050919050565b6000610c1682610be9565b9050919050565b6000610c2882610c0b565b9050919050565b610c3881610c1d565b82525050565b6000602082019050610c536000830184610c2f565b92915050565b610c6281610b81565b8114610c6d57600080fd5b50565b600081359050610c7f81610c59565b92915050565b600060208284031215610c9b57610c9a610af1565b5b6000610ca984828501610c70565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652065746800000000000000600082015250565b6000610cf9601983610cb2565b9150610d0482610cc3565b602082019050919050565b60006020820190508181036000830152610d2881610cec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6982610b81565b9150610d7483610b81565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da957610da8610d2f565b5b828201905092915050565b600081519050610dc381610c59565b92915050565b600060208284031215610ddf57610dde610af1565b5b6000610ded84828501610db4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e3082610b81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e6357610e62610d2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eb8600083610e9d565b9150610ec382610ea8565b600082019050919050565b6000610ed982610eab565b9150819050919050565b6000610eee82610b81565b9150610ef983610b81565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3257610f31610d2f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7782610b81565b9150610f8283610b81565b925082610f9257610f91610f3d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbc81610f9d565b8114610fc757600080fd5b50565b600081519050610fd981610fb3565b92915050565b6000819050919050565b610ff281610fdf565b8114610ffd57600080fd5b50565b60008151905061100f81610fe9565b92915050565b600080600080600060a0868803121561103157611030610af1565b5b600061103f88828901610fca565b955050602061105088828901611000565b945050604061106188828901610db4565b935050606061107288828901610db4565b925050608061108388828901610fca565b9150509295509295909350565b600061109b82610fdf565b91506110a683610fdf565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110e5576110e4610d2f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112257611121610d2f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561115f5761115e610d2f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561119c5761119b610d2f565b5b82820290509291505056fea2646970667358221220d00b053589a64d7efa4297b492142e0b981922ccb7b21498d1522165a16bda4164736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063be2693f0146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b54565b610322565b6040516100d79190610b9a565b60405180910390f35b3480156100ec57600080fd5b506100f561036b565b6040516101029190610b9a565b60405180910390f35b610113610412565b005b34801561012157600080fd5b5061012a61063c565b6040516101379190610b9a565b60405180910390f35b34801561014c57600080fd5b50610155610649565b6040516101629190610bc4565b60405180910390f35b34801561017757600080fd5b50610180610671565b60405161018d9190610c3e565b60405180910390f35b61019e6101e7565b005b6101a861069b565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610c85565b610927565b6040516101de9190610bc4565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096e90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d0f565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b69190610d5e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d557600080fd5b505afa1580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610dc9565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610497576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105425760008082815481106104bc576104bb610df6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053a90610e25565b91505061049a565b50600067ffffffffffffffff81111561055e5761055d610e6e565b5b60405190808252806020026020018201604052801561058c5781602001602082028036833780820191505090505b50600090805190602001906105a2929190610a4a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105e990610ece565b60006040518083038185875af1925050503d8060008114610626576040519150601f19603f3d011682016040523d82523d6000602084013e61062b565b606091505b505090508061063957600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610720576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610759575b5050505050905060005b815181101561082c5760008282815181106107cb576107ca610df6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508061082590610e25565b90506107ad565b50600067ffffffffffffffff81111561084857610847610e6e565b5b6040519080825280602002602001820160405280156108765781602001602082028036833780820191505090505b506000908051906020019061088c929190610a4a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d390610ece565b60006040518083038185875af1925050503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b505090508061092357600080fd5b5050565b600080828154811061093c5761093b610df6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061097a836109aa565b90506000670de0b6b3a764000085836109939190610ee3565b61099d9190610f6c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611015565b5050509150506402540be40081610a429190611090565b915050919050565b828054828255906000526020600020908101928215610ac3579160200282015b82811115610ac25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a6a565b5b509050610ad09190610ad4565b5090565b5b80821115610aed576000816000905550600101610ad5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2182610af6565b9050919050565b610b3181610b16565b8114610b3c57600080fd5b50565b600081359050610b4e81610b28565b92915050565b600060208284031215610b6a57610b69610af1565b5b6000610b7884828501610b3f565b91505092915050565b6000819050919050565b610b9481610b81565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b610bbe81610b16565b82525050565b6000602082019050610bd96000830184610bb5565b92915050565b6000819050919050565b6000610c04610bff610bfa84610af6565b610bdf565b610af6565b9050919050565b6000610c1682610be9565b9050919050565b6000610c2882610c0b565b9050919050565b610c3881610c1d565b82525050565b6000602082019050610c536000830184610c2f565b92915050565b610c6281610b81565b8114610c6d57600080fd5b50565b600081359050610c7f81610c59565b92915050565b600060208284031215610c9b57610c9a610af1565b5b6000610ca984828501610c70565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f2073656e64206d6f72652065746800000000000000600082015250565b6000610cf9601983610cb2565b9150610d0482610cc3565b602082019050919050565b60006020820190508181036000830152610d2881610cec565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6982610b81565b9150610d7483610b81565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da957610da8610d2f565b5b828201905092915050565b600081519050610dc381610c59565b92915050565b600060208284031215610ddf57610dde610af1565b5b6000610ded84828501610db4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e3082610b81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e6357610e62610d2f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eb8600083610e9d565b9150610ec382610ea8565b600082019050919050565b6000610ed982610eab565b9150819050919050565b6000610eee82610b81565b9150610ef983610b81565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f3257610f31610d2f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f7782610b81565b9150610f8283610b81565b925082610f9257610f91610f3d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fbc81610f9d565b8114610fc757600080fd5b50565b600081519050610fd981610fb3565b92915050565b6000819050919050565b610ff281610fdf565b8114610ffd57600080fd5b50565b60008151905061100f81610fe9565b92915050565b600080600080600060a0868803121561103157611030610af1565b5b600061103f88828901610fca565b955050602061105088828901611000565b945050604061106188828901610db4565b935050606061107288828901610db4565b925050608061108388828901610fca565b9150509295509295909350565b600061109b82610fdf565b91506110a683610fdf565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110e5576110e4610d2f565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561112257611121610d2f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561115f5761115e610d2f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561119c5761119b610d2f565b5b82820290509291505056fea2646970667358221220d00b053589a64d7efa4297b492142e0b981922ccb7b21498d1522165a16bda4164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}